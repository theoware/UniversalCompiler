name: MyExpenses APK Build and Sign 

on:
  schedule:
    - cron: "0 1 * * 0"
  push:
    paths: .github/workflows/my-expenses.yml
    branches: main
  workflow_dispatch:

jobs:
  tag:
    name: Build
    runs-on: ubuntu-latest
    env:
      NDK_CCACHE: ${{ github.workspace }}/ccache
    steps:
      - name: Download My-Expenses's source code
        uses: actions/checkout@v4.2.2
        with:
          repository: mtotschnig/MyExpenses
          fetch-depth: 0

      - name: Get tag within 7 days
        id: tag
        run: |
          TAG=$(git log --tags --simplify-by-decoration --pretty="format:%d" --since='7 days ago' | grep tag | head -n1 | cut -f 3 -d " " | cut -f 1 -d ")")
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
          echo $TAG

      - name: Download My-Expenses's source code
        if: ${{ steps.tag.outputs.tag }}
        uses: actions/checkout@v4.2.2
        with:
          repository: theoware/OurExpenses
          token: ${{ secrets.GH_PAT }}

      - name: Install APK Signer
        if: ${{ steps.tag.outputs.tag }}
        run: |
          wget https://github.com/patrickfav/uber-apk-signer/releases/download/v1.2.1/uber-apk-signer-1.2.1.jar -O uber-apk-signer.jar
          echo "47ae984df200afbae292d6f950e517afb445d3c902a1edc7717a82c513c5e772 uber-apk-signer.jar" | sha256sum -c

      - name: Setup Java JDK
        if: ${{ steps.tag.outputs.tag }}
        uses: actions/setup-java@v4.5.0
        with:
          java-version: 21
          distribution: oracle
          check-latest: true
          cache: gradle

      - name: Setup Android SDK
        if: ${{ steps.tag.outputs.tag }}
        uses: android-actions/setup-android@v3

      - name: Build
        if: ${{ steps.tag.outputs.tag }}
        run: |
          ./gradlew :myExpenses:packageExternReleaseUniversalApk

      - name: Sign APK
        if: ${{ steps.tag.outputs.tag }}
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
          java -jar uber-apk-signer.jar --allowResign --apks myExpenses/build/outputs/apk_from_bundle/externRelease/*.apk --ks keystore.jks --ksAlias "${{ secrets.ANDROID_KEYSTORE_ALIAS }}" --ksKeyPass "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" --ksPass "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" -o signed/
          mv "signed/myExpenses-extern-release-universal-aligned-signed.apk" "signed/myExpenses-extern-release-universal-aligned-signed-$(date +'%Y-%m-%d').apk"

      - name: Remove Keystore
        if: ${{ steps.tag.outputs.tag }} && always()
        run: rm -f keystore.jks
        
      - name: Upload APK
        if: ${{ steps.tag.outputs.tag }}
        uses: actions/upload-artifact@v4.4.3
        with:
          name: signed
          if-no-files-found: error
          path: |
            signed/

      - name: Upload the APK to Telegram
        if: ${{ steps.tag.outputs.tag }}
        run: curl -F document=@"signed/myExpenses-extern-release-universal-aligned-signed-$(date +'%Y-%m-%d').apk" https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument?chat_id=${{ secrets.TELEGRAM_CHAT_ID }}

