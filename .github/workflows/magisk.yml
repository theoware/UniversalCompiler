name: Magisk Build

on:
  push:
    paths: .github/workflows/magisk.yml
  workflow_dispatch:

jobs:
  build:
    name: Build on ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      NDK_CCACHE: ${{ github.workspace }}/ccache
      CCACHE_DIR: ${{ github.workspace }}/.ccache

    steps:

      - name: Check out
        uses: actions/checkout@main
        with:
          submodules: 'recursive'
          fetch-depth: 0
          repository: vvb2060/Magisk

      - name: set up JDK 11
        uses: actions/setup-java@main
        with:
          java-version: 11
          distribution: temurin

      - name: Set up Python 3
        uses: actions/setup-python@main
        with:
          python-version: '3.x'

      - name: Set up ccache
        run: bash .github/ccache.sh

      - name: Cache Gradle dependencies
        uses: actions/cache@main
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache build cache
        uses: actions/cache@main
        with:
          path: |
            ${{ github.workspace }}/.ccache
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-build-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-cache-

      - name: Set up NDK
        run: python build.py -v ndk

      - name: Build release
        run: |
          ./ccache -zp
          echo 'org.gradle.jvmargs=-Xmx3096m' >> gradle.properties
          python build.py -vr all

      - name: Build debug
        run: |
          python build.py -v all
          ./ccache -s

      - name: Stop gradle daemon
        run: ./gradlew --stop

      - name: Unzip files
        run: |
          mkdir -p out/app-debug
          mkdir -p out/stub-release
          mkdir -p out/app-release
          unzip out/app-debug.apk -d out/app-debug
          unzip out/stub-release.apk -d out/stub-release
          unzip out/app-release.apk -d out/app-release

      - name: Upload build artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ github.sha }}_app-release
          path: out/app-release

      - name: Upload build artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ github.sha }}_stub-release
          path: out/stub-release

      - name: Upload build artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ github.sha }}_app-debug
          path: out/app-debug

      - name: Send fail message
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ GITHUB.WORKFLOW }} failed
          
      - name: Send suceed message
        if: ${{ !failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ GITHUB.WORKFLOW }} succeeded