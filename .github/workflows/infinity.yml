name: Infinity APK Build and Sign 

on:
  push:
    paths: .github/workflows/infinity.yml
    branches: main
  workflow_dispatch:

jobs:
  tag:
    name: Build
    runs-on: ubuntu-latest
    env:
      NDK_CCACHE: ${{ github.workspace }}/ccache
      USER_AGENT: fuck u/spez
      REDIRECT_URI: http://127.0.0.1
    steps:
      - name: Download Infinity's source code
        uses: actions/checkout@v4.1.7
        with:
          repository: Docile-Alligator/Infinity-For-Reddit

      - name: Install APK Signer
        run: |
          wget https://github.com/patrickfav/uber-apk-signer/releases/download/v1.2.1/uber-apk-signer-1.2.1.jar -O uber-apk-signer.jar
          echo "47ae984df200afbae292d6f950e517afb445d3c902a1edc7717a82c513c5e772 uber-apk-signer.jar" | sha256sum -c

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.2
        with:
          java-version: 17
          distribution: oracle
          check-latest: true
          cache: gradle

      - name: Change API
        shell: python
        run: |
          import re

          apiutils_file = "app/src/main/java/ml/docilealligator/infinityforreddit/utils/APIUtils.java"
          REDDIT_API_TOKEN = "${{ secrets.REDDIT_API_TOKEN }}"
          USER_AGENT = f"fuck u/spez"
          REDIRECT_URI = "http://127.0.0.1"

          apiutils_code = open(apiutils_file, "r", encoding="utf-8-sig").read()
          apiutils_code = apiutils_code.replace("NOe2iKrPPzwscA", REDDIT_API_TOKEN)
          apiutils_code = apiutils_code.replace("infinity://localhost", REDIRECT_URI)
          apiutils_code = re.sub(r'public static final String USER_AGENT = ".*?";', f'public static final String USER_AGENT = "{USER_AGENT}";', apiutils_code)

          with open(apiutils_file, "w", encoding="utf-8") as f:
            f.write(apiutils_code)

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Build
        run: |
          sed -i 's/org.gradle.jvmargs=-Xmx2048m/org.gradle.jvmargs=-Xmx4096m/' gradle.properties
          ./gradlew assembleRelease

      - name: Sign APK
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
          java -jar uber-apk-signer.jar --allowResign --apks myExpenses/build/outputs/apk_from_bundle/externRelease/*.apk --ks keystore.jks --ksAlias "${{ secrets.ANDROID_KEYSTORE_ALIAS }}" --ksKeyPass "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" --ksPass "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" -o signed/

      - name: Remove Keystore && always()
        run: rm -f keystore.jks
        
      - name: Upload APK
        uses: actions/upload-artifact@v4.3.6
        with:
          name: signed
          if-no-files-found: error
          path: |
            signed/

      - name: Upload the APK to Telegram
        run: curl -F document=@"signed/myExpenses-extern-release-universal-aligned-signed.apk" https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument?chat_id=${{ secrets.TELEGRAM_CHAT_ID }}

