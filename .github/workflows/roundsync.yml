name: Round-Sync

on:
  push:
    paths: .github/workflows/roundsync.yml
    branches: main

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NDK_CCACHE: ${{ github.workspace }}/ccache
    steps:

    - name: Download the source code
      uses: actions/checkout@v4.2.2
      with:
        repository: newhinton/Round-Sync

    - name: Install dependencies
      run: |
        wget https://github.com/patrickfav/uber-apk-signer/releases/download/v1.2.1/uber-apk-signer-1.2.1.jar -O uber-apk-signer.jar
        echo "47ae984df200afbae292d6f950e517afb445d3c902a1edc7717a82c513c5e772 uber-apk-signer.jar" | sha256sum -c

    - name: Setup Java JDK
      uses: actions/setup-java@v4.5.0
      with:
        java-version: 17
        distribution: temurin
        check-latest: true
        cache: gradle

    - name: Setup Go environment
      uses: actions/setup-go@v5.0.2

    - name: Install the android NDK
      run: |
        mkdir -p "${ANDROID_HOME}"
        curl https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip -o ${{ GITHUB.WORKSPACE }}/sdk.zip
        unzip -d "${ANDROID_HOME}/cmdline-tools/" sdk.zip
        mv "${ANDROID_HOME}/cmdline-tools/cmdline-tools" "${ANDROID_HOME}/cmdline-tools/latest"
        rm ${{ GITHUB.WORKSPACE }}/sdk.zip
        echo 'export PATH="${PATH}:${ANDROID_HOME}/cmdline-tools/latest/bin"' | tee -a ~/.bashrc
        source ~/.bashrc
        yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --licenses --sdk_root="${ANDROID_HOME}"

    - name: Build
      run: |
        chmod +x  gradlew
        ./gradlew --no-daemon assembleOssRelease -x lint -x lintdebug

    - name: Sign the APKs
      if: github.event_name != 'pull_request'
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64}}" | base64 -d > keystore.jks
        java -jar uber-apk-signer.jar --allowResign --apks app/build/outputs/apk/*/*.apk --ks keystore.jks --ksAlias "${{ secrets.ANDROID_KEYSTORE_ALIAS }}" --ksKeyPass "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" --ksPass "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" -o signed/

    - name: Remove Keystore
      if: always()
      run: rm -f keystore.jks

    - name: Upload signed APKs
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4.4.3
      with:
        name: signed
        if-no-files-found: error
        path: |
          signed/

    - name: Upload the small APK to Telegram
      if: github.event_name != 'pull_request'
      run: curl -F document=@"signed/$(find signed/ -name *.apk)" https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument?chat_id=${{ secrets.TELEGRAM_CHAT_ID }}
