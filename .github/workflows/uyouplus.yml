name: Build and Release YTLitePlus

on:
  workflow_dispatch:
  push:
    paths: .github/workflows/uyouplus.yml
    branches: main

jobs:
  build:
    name: Build YTLitePlus
    runs-on: macos-latest
    permissions:
      contents: write
    env:
      THEOS: ${{ github.workspace }}/theos
      UYOU_VERSION: 3.0.3
      YOUTUBE_VERSION: 19.10.7
      YOUTUBE_URL: https://und3fy-my.sharepoint.com/personal/greenglasst_und3fy_dev/_layouts/15/download.aspx?share=EYVD8zEIxRtCtO5Sqwbd_xIBFr1oX9-9ScP2LD-h2Jdyug
      APP_NAME: YouTube
      CREATE_RELEASE_DRAFT: true

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.1
        with:
          path: main
          submodules: recursive
          repository: YTLitePlus/YTLitePlus
          fetch-depth: 0

      - name: Install Dependencies
        run: brew install ldid dpkg make wget

      - name: Set PATH environment variable
        run: echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH 

      - name: Setup Theos
        uses: actions/checkout@v4.2.1
        with:
          repository: theos/theos
          ref: 3da31488281ecf4394d10302d2629607f4a1aa07
          path: theos
          submodules: recursive

      - name: Caching
        id: SDK
        uses: actions/cache@v4.1.0
        with:
          path: theos/sdks/
          key: iOS-16.5-SDK-${{ runner.os }}

      - name: Download iOS SDK
        if: steps.SDK.outputs.cache-hit != 'true'
        run: |
          git clone -n --depth=1 --filter=tree:0 https://github.com/theos/sdks/
          cd sdks
          git sparse-checkout set --no-cone iPhoneOS16.5.sdk
          git checkout
          mv *.sdk $THEOS/sdks

      - name: Setup Theos Jailed
        uses: actions/checkout@v4.2.1
        with:
          repository: qnblackcat/theos-jailed
          ref: master
          path: theos-jailed
          submodules: recursive

      - name: Install Theos Jailed
        run: |
          ./theos-jailed/install

      - name: Fix Compiling
        run: |
          # Update GNU Make to allow for faster building
          echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH
          (echo export PATH="/usr/local/opt/make/libexec/gnubin:$PATH" >> ~/.bash_profile)
          source ~/.bash_profile

      - name: Prepare YouTube iPA
        run: |
          # Download and unzip iPA
          wget "$YOUTUBE_URL" --no-verbose -O main/YouTube.ipa
          unzip -q main/YouTube.ipa -d main/tmp
          # Get the version number of the YouTube app and store it
          echo "YT_VERSION=$(grep -A 1 '<key>CFBundleVersion</key>' main/tmp/Payload/YouTube.app/Info.plist | grep '<string>' | awk -F'[><]' '{print $3}')" >> $GITHUB_ENV
          # Get the version number of the latest release
          wget -qO- https://github.com/dayanch96/YTLite/releases/latest > main/tmp/release_page.html
          YTLITE_VERSION=$(grep -o -E '/tag/v[^"]+' main/tmp/release_page.html | head -n 1 | sed 's/\/tag\/v//')
          echo "YTLITE_VERSION=${YTLITE_VERSION}" >> $GITHUB_ENV
          echo $YTLITE_VERSION
          # Remove contents in the iPA that interfere with sideloading
          rm -rf main/tmp/Payload/YouTube.app/_CodeSignature/CodeResources
          rm -rf main/tmp/Payload/YouTube.app/PlugIns/*
          # Modify Info.plist to remove UISupportedDevices (Python script)
          python - <<EOF
          import plistlib
          def remove_uisupporteddevices(filepath):
              with open(filepath, 'rb') as f:
                  plist = plistlib.load(f)

              if 'UISupportedDevices' in plist:
                  del plist['UISupportedDevices']

              with open(filepath, 'wb') as f:
                  plistlib.dump(plist, f)

          filepath = 'main/tmp/Payload/YouTube.app/Info.plist'
          remove_uisupporteddevices(filepath)
          EOF
          # Manually install the Open in YouTube extension
          cp -R main/Extensions/*.appex main/tmp/Payload/YouTube.app/PlugIns

      - name: VirusTotal Scan
        id: vt_orig
        uses: crazy-max/ghaction-virustotal@v4
        continue-on-error: true
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}
          request_rate: 4
          files: ./main/YouTube.ipa

      - name: Build Package
        id: build_package
        run: |
          cd ${{ github.workspace }}/main
          # Replace lines in Makefile based on inputs
          sed -i '' "s/^BUNDLE_ID.*$/BUNDLE_ID = ${{ env.BUNDLE_ID }}/" Makefile
          sed -i '' "s/^DISPLAY_NAME.*$/DISPLAY_NAME = ${{ env.APP_NAME }}/" Makefile
          sed -i '' "s/^PACKAGE_VERSION.*$/PACKAGE_VERSION = ${{ env.YT_VERSION }}-${{ env.YTLITE_VERSION }}/" Makefile
          sed -i '' "s/^export TARGET.*$/export TARGET = iphone:clang:${{ inputs.sdk_version }}:14.0/" Makefile
          # Build the package
          make package
          # Rename the package based on the version
          (mv "packages/$(ls -t packages | head -n1)" "packages/YTLitePlus_${{ env.YT_VERSION }}_${{ env.YTLITE_VERSION }}.ipa")
          # Pass package name to the upload step
          echo "package=$(ls -t packages | head -n1)" >> $GITHUB_OUTPUT
          # Print out the hash and bundle ID
          echo -e "==> \033[1mSHASUM256: $(shasum -a 256 packages/*.ipa | cut -f1 -d' ')\033[0m"
          echo -e "==> \033[1mBundle ID: ${{ env.BUNDLE_ID }}\033[0m"

      - name: VirusTotal Scan
        id: vt
        uses: crazy-max/ghaction-virustotal@v4
        continue-on-error: true
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}
          request_rate: 4
          files: ${{ github.workspace }}/main/packages/${{ steps.build_package.outputs.package }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: uYouEnhanced_${{ env.YOUTUBE_VERSION }}_${{ env.UYOU_VERSION }}
          path: ${{ github.workspace }}/main/packages/${{ steps.build_package.outputs.package }}
          if-no-files-found: error

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2.0.8
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          repository: theoware/Altstore
          tag_name: v${{ env.YOUTUBE_VERSION }}-${{ env.UYOU_VERSION }}-(${{ github.run_number }})
          name: v${{ env.YOUTUBE_VERSION }}-${{ env.UYOU_VERSION }}-(${{ github.run_number }})
          files: main/packages/*.ipa
          body: |
            ${{ steps.vt.outputs.analysis }}
            ${{ steps.vt_orig.outputs.analysis }}
